// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(uuid()) @db.Uuid
  email     String        @unique
  password  String
  firstName String        @map("first_name") @db.VarChar(64)
  lastName  String        @map("last_name") @db.VarChar(64)
  roles     Role[]        @relation(name: "user_roles")
  history   UserHistory[]
  lastLogin DateTime      @default(now()) @map("last_login")
  active    Boolean       @default(true)
  deletedAt DateTime?     @map("deleted_at")
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @default(now()) @updatedAt @map("updated_at")

  @@map("users")
}

model Role {
  id        Int      @id @default(autoincrement())
  role      String   @unique @db.VarChar(20)
  users     User[]   @relation(name: "user_roles")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("roles")
}

model UserHistory {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId    String   @db.Uuid
  type      LogType  @relation(fields: [typeId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  typeId    Int
  message   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("user_history")
}

model LogType {
  id        Int           @id @default(autoincrement())
  type      String        @unique @db.VarChar(36)
  history   UserHistory[]
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @default(now()) @updatedAt @map("updated_at")

  @@map("log_types")
}
